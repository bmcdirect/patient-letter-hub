Prompt for Replit Agent

Goal: Run a fast, end-to-end verification of the latest fixes (null-safe timestamps, UI guards, session storage, multi-file upload). Stop at the first failure, print clear diagnostics, and—if possible—auto-remediate before moving on.

0 . Preparation
bash
Copy
Edit
# ensure dev server isn’t already running
pkill -f "tsx server/index.ts" || true
npm run dev &
sleep 3          # give it time to boot
1 . Data-layer sanity — no NULL timestamps in orders
sql
Copy
Edit
-- run via your preferred SQL shell or bunx drizzle-kit console
SELECT count(*) AS null_dates
FROM orders
WHERE created_at IS NULL OR updated_at IS NULL;
*✅ Pass if result is 0.
❌ Fail → run the back-fill again:

ts
Copy
Edit
// in server/scripts/backfillPracticeId.ts (already contains timestamp logic)
await backfillTimestamps();
Restart server and re-run the query.

2 . Code-search — eliminate any direct toLocale* calls
bash
Copy
Edit
grep -R "toLocaleDateString\|toLocaleTimeString\|toLocaleString" \
     client/src --include='*.tsx' --include='*.ts' | \
     grep -v "fmtDate"
*✅ Pass if no output (or only inside fmtDate.ts).
❌ Fail → replace remaining calls with fmtDate() (+ import), commit change, restart server.

3 . UI smoke test — Orders list renders, no console errors
Open browser dev-tools → Console cleared.

Hard-refresh /orders (Shift-Reload).

*✅ Pass if table rows render and console shows no red errors.
❌ Fail → capture console stack + network tab for /api/orders; print them to stdout for debugging and halt.

4 . Session persistence across restart
bash
Copy
Edit
# still logged-in from browser, now:
pkill -f "tsx server/index.ts" || true
npm run dev &
sleep 3
Reload browser tab.

*✅ Pass if user stays authenticated (dashboard loads).
❌ Fail → check SQLite session store wiring in server/index.ts, log error.

5 . Multi-file order creation
bash
Copy
Edit
echo "alpha"  > /tmp/a.csv
echo "bravo"  > /tmp/b.pdf
curl -sb cookies.txt \
     -F file=@/tmp/a.csv -F file=@/tmp/b.pdf \
     -F subject="multi-file-verify" \
     -F templateType=standard \
     -F colorMode=color \
     http://localhost:5000/api/orders | jq '.practiceId, .createdAt, .updatedAt'
*✅ Pass if HTTP 201 and JSON shows non-null practiceId, createdAt, updatedAt.
❌ Fail → echo full response + server log snippet (last 100 lines) and halt.

6 . Final report
Print a concise summary:

text
Copy
Edit
✔ DB timestamps: OK
✔ UI guard search: OK
✔ Orders page render: OK
✔ Session survives restart: OK
✔ Multi-file upload: OK
All verification steps passed. Ready for production.
If any step failed, clearly mark which one, the observed output, and do not claim overall success.

Run each block sequentially, automatically fixing trivial issues when possible, and commit only when the entire checklist is green.